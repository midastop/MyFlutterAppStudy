// 동기 vs 비동기
/* 프로그램은 일반적으로 소스코드가 작성된 순서대로 처리하는데 이렇게 순서대로 처리하는 방식을
 * 동기(synchronous) 방식이라고 한다. 동기 방식은 프로그램이 실행되면 앞의 작업이 처리되고
 * 그 다음 작업으로 넘어간다. 이런 경우 시간이 많이 걸리는 작업이 앞에 있다면 다음에 실행할
 * 작업은 앞의 작업이 완료될 때 까지 무한정 기다리게 된다. 이러한 문제를 해결하기 위해서 비동기
 * (asynchronous) 방식을 사용한다. 비동기 방식은 앞의 작업이 완료될 때 까지 기다리지 않고
 * 다음 작업이 바로 실행되는 방식으로 프로그램 코드가 순차적으로 실행되지 않는 구조이다.
 **/
void main() {
  greeting("홍길동", 1);
  greeting("이순신", 2);
}

void greeting(String name, int num) {
  print("greeting $num 시작");

  /* Future 클래스의 delayed() 함수는 지정한 시간(초) 동안 대기 한 후에 콜백 함수를
   * 실행한다. 서버에 요청을 보내 결과를 받아 오거나, 시간이 많이 걸리는 작업을 아래에
   * 지정한 시간 만큼 수행한다고 가정하자. 이 함수의 예상 실행 순서는 코드가 작성된 순서대로
   * 실행될 것이라고 생각하지만 실제 실행 결과를 보면 그렇지 못하다.
   **/
  Future.delayed(Duration(seconds: 3), () {
    print("안녕하세요 ${name}님~");
  });

  print("greeting $num 끝");
}

/*
  //실행결과
음식을 주문 받음
음식을 조리 중...
조리 완료
 */