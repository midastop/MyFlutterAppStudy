// 동기 vs 비동기
/* 프로그램은 일반적으로 소스코드가 작성된 순서대로 처리하는데 이렇게 순서대로 처리하는 방식을
 * 동기(synchronous) 방식이라고 한다. 동기 방식은 프로그램이 실행되면 앞의 작업이 처리되고
 * 그 다음 작업으로 넘어간다. 이런 경우 시간이 많이 걸리는 작업이 앞에 있다면 다음에 실행할
 * 작업은 앞의 작업이 완료될 때 까지 무한정 기다리게 된다. 이러한 문제를 해결하기 위해서 비동기
 * (asynchronous) 방식을 사용한다. 비동기 방식은 앞의 작업이 완료될 때 까지 기다리지 않고
 * 다음 작업이 바로 실행되는 방식으로 프로그램 코드가 순서대로 실행되지 않는 구조이다.
 **/
void order() {
  print("음식을 주문 받음");
}

void cooking() {
  print("음식을 조리 중...");
}

void complete() {
  print("조리 완료");
}

void main() {
  /* 프로그램은 일반적으로 소스코드가 작성된 순서대로 처리하는데 이렇게 순서대로 처리하는
   * 방식을 동기(synchronous) 방식이라고 한다. 동기 방식은 다음과 같이 함수가 호출되는
   * 순서대로 실행되며 앞의 함수가 실행이 완료된 후에 다음 함수가 차례대로 실행된다.
   **/
  order();
  cooking();
  complete();
}
/*
  //실행결과
  음식을 주문 받음
  음식을 조리 중...
  조리 완료
 */